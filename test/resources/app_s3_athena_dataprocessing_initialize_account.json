{
    "Comment": "A State Machine to initialize the account",
    "StartAt": "Build Folder List",
    "States": {
        "Build Folder List": {
            "Comment": "Build a list of folders that should be created in s3",
            "Next": "Create Default Folders",
            "Result": [
                "${ParameterFolderDataStore1Current}",
                "${ParameterFolderDataStore1Historical}",
                "${ParameterFolderDataStore2Current}",
                "${ParameterFolderDataStore2Historical}",
                "${ParameterFolderDataStore3Current}",
                "${ParameterFolderDataStore3Historical}"
            ],
            "Type": "Pass"
        },
        "Create Default Folders": {
            "Iterator": {
                "StartAt": "Ensure Folder Exists",
                "States": {
                    "Ensure Folder Exists": {
                        "End": true,
                        "Parameters": {
                            "FunctionName": "${LambdaCreateS3Folder}",
                            "Payload": {
                                "folder_path.$": "$"
                            }
                        },
                        "Resource": "arn:aws:states:::lambda:invoke",
                        "ResultSelector": {
                            "FunctionResult.$": "$.Payload"
                        },
                        "Retry": [
                            {
                                "BackoffRate": 2,
                                "ErrorEquals": [
                                    "Lambda.ServiceException",
                                    "Lambda.AWSLambdaException",
                                    "Lambda.SdkClientException"
                                ],
                                "IntervalSeconds": 2,
                                "MaxAttempts": 6
                            }
                        ],
                        "Type": "Task"
                    }
                }
            },
            "Next": "Get Glue Crawler List",
            "Type": "Map"
        },
        "Get Glue Crawler List": {
            "Next": "Run Glue Crawlers",
            "OutputPath": "$.Payload",
            "Parameters": {
                "FunctionName": "${LambdaListGlueCrawlers}",
                "Payload": {
                    "crawler_prefix": "${GlueCrawlerPrefix}"
                }
            },
            "Resource": "arn:aws:states:::lambda:invoke",
            "Retry": [
                {
                    "BackoffRate": 2,
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 6
                }
            ],
            "Type": "Task"
        },
        "Run Glue Crawlers": {
            "End": true,
            "Iterator": {
                "StartAt": "Start Glue Crawler",
                "States": {
                    "Start Glue Crawler": {
                        "End": true,
                        "Parameters": {
                            "FunctionName": "${LambdaStartGlueCrawler}",
                            "Payload": {
                                "crawler_name.$": "$"
                            }
                        },
                        "Resource": "arn:aws:states:::lambda:invoke",
                        "ResultSelector": {
                            "FunctionResult.$": "$.Payload"
                        },
                        "Retry": [
                            {
                                "BackoffRate": 2,
                                "ErrorEquals": [
                                    "Lambda.ServiceException",
                                    "Lambda.AWSLambdaException",
                                    "Lambda.SdkClientException"
                                ],
                                "IntervalSeconds": 2,
                                "MaxAttempts": 6
                            }
                        ],
                        "Type": "Task"
                    }
                }
            },
            "Type": "Map"
        }
    }
}
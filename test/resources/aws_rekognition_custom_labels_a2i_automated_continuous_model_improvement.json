{
    "Comment": "Rekognition Custom Labels with A2I Workflows",
    "StartAt": "Event",
    "States": {
        "A2I HumanLoop Data": {
            "Next": "Add Training Image",
            "Resource": "${LambdaA2IHumanLoopData}",
            "Type": "Task"
        },
        "A2I Off": {
            "End": true,
            "Type": "Pass"
        },
        "Add Training Image": {
            "End": true,
            "Type": "Pass"
        },
        "Apply Parameter": {
            "End": true,
            "Resource": "${LambdaUpdateEventRules}",
            "Type": "Task"
        },
        "Check A2I": {
            "Choices": [
                {
                    "BooleanEquals": true,
                    "Next": "Create HumanLoop",
                    "Variable": "$.message.Task.UserSettings.EnableA2IWorkflow"
                }
            ],
            "Default": "A2I Off",
            "Type": "Choice"
        },
        "Check Confidence": {
            "Choices": [
                {
                    "Next": "Pass Confidence",
                    "StringEquals": "End",
                    "Variable": "$.message.NextTask"
                }
            ],
            "Default": "Failed Confidence",
            "Type": "Choice"
        },
        "Check Last Sample": {
            "Next": "Check Sampling Interval",
            "Resource": "${LambdaCheckHumanSampling}",
            "Type": "Task"
        },
        "Check New Training": {
            "Choices": [
                {
                    "Next": "Initiate Training",
                    "StringEquals": "CreateManifest",
                    "Variable": "$.message.NextTask"
                }
            ],
            "Default": "No New Training",
            "Type": "Choice"
        },
        "Check Sampling Interval": {
            "Choices": [
                {
                    "Next": "No New Sample",
                    "StringEquals": "End",
                    "Variable": "$.message.NextTask"
                }
            ],
            "Default": "Create Human Sample",
            "Type": "Choice"
        },
        "Create Human Sample": {
            "Next": "Check Last Sample",
            "Seconds": 5,
            "Type": "Wait"
        },
        "Create HumanLoop": {
            "End": true,
            "Resource": "${LambdaA2ICreateHumanLoop}",
            "Type": "Task"
        },
        "Create Manifest": {
            "Next": "Create Project Version",
            "Resource": "${LambdaCreateTrainingManifest}",
            "Type": "Task"
        },
        "Create Project Version": {
            "Next": "Wait for Training",
            "Resource": "${LambdaTrainDeployModel}",
            "Type": "Task"
        },
        "Deploy Endpoint": {
            "End": true,
            "Resource": "${LambdaTrainDeployModel}",
            "Type": "Task"
        },
        "Event": {
            "Choices": [
                {
                    "Next": "Parameter Store",
                    "StringEquals": "aws.ssm",
                    "Variable": "$.source"
                },
                {
                    "Next": "Rekongition Detection",
                    "StringEquals": "s3-detection-event",
                    "Variable": "$.source"
                },
                {
                    "Next": "A2I HumanLoop Data",
                    "StringEquals": "s3-a2i-event",
                    "Variable": "$.source"
                },
                {
                    "Next": "Rekongition Model",
                    "StringMatches": "arn:aws:events:*-scheduled-poll",
                    "Variable": "$.resources[0]"
                },
                {
                    "Next": "Human Sampling",
                    "StringMatches": "arn:aws:events:*-sampling-poll",
                    "Variable": "$.resources[0]"
                }
            ],
            "Default": "Unknown Event",
            "Type": "Choice"
        },
        "Failed Confidence": {
            "Next": "Check A2I",
            "Type": "Pass"
        },
        "Failed F1 Score": {
            "Next": "Failure",
            "Type": "Pass"
        },
        "Failure": {
            "Type": "Fail"
        },
        "Get Model Status": {
            "Next": "Starting-in-Progress",
            "Resource": "${LambdaTrainDeployModel}",
            "Type": "Task"
        },
        "Get Training Status": {
            "Next": "Training-in-Progress",
            "Resource": "${LambdaTrainDeployModel}",
            "Type": "Task"
        },
        "Human Sampling": {
            "Next": "Check Last Sample",
            "Type": "Pass"
        },
        "Initiate Training": {
            "Next": "Create Manifest",
            "Type": "Pass"
        },
        "Model Started": {
            "Next": "Deploy Endpoint",
            "Type": "Pass"
        },
        "No New Sample": {
            "Type": "Succeed"
        },
        "No New Training": {
            "Type": "Succeed"
        },
        "Parameter Store": {
            "Next": "Apply Parameter",
            "Type": "Pass"
        },
        "Pass Confidence": {
            "Type": "Succeed"
        },
        "Rekongition Detection": {
            "Next": "Check Confidence",
            "Resource": "${LambdaRekognitionDetectLabel}",
            "Type": "Task"
        },
        "Rekongition Model": {
            "Next": "Check New Training",
            "Resource": "${LambdaCheckAutoTraining}",
            "Type": "Task"
        },
        "Start Model": {
            "Next": "Wait for Start",
            "Resource": "${LambdaTrainDeployModel}",
            "Type": "Task"
        },
        "Starting-in-Progress": {
            "Choices": [
                {
                    "Next": "Wait for Start",
                    "StringEquals": "DescribeProjectVersions",
                    "Variable": "$.message.NextTask"
                },
                {
                    "Next": "Model Started",
                    "StringEquals": "ModelRunning",
                    "Variable": "$.message.NextTask"
                }
            ],
            "Default": "Failure",
            "Type": "Choice"
        },
        "Training Completed": {
            "Next": "Start Model",
            "Type": "Pass"
        },
        "Training-in-Progress": {
            "Choices": [
                {
                    "Next": "Wait for Training",
                    "StringEquals": "DescribeProjectVersions",
                    "Variable": "$.message.NextTask"
                },
                {
                    "Next": "Training Completed",
                    "StringEquals": "StartProjectVersion",
                    "Variable": "$.message.NextTask"
                },
                {
                    "Next": "Failed F1 Score",
                    "StringEquals": "FailedF1Evaluation",
                    "Variable": "$.message.NextTask"
                }
            ],
            "Default": "Failure",
            "Type": "Choice"
        },
        "Unknown Event": {
            "Type": "Fail"
        },
        "Wait for Start": {
            "Next": "Get Model Status",
            "Seconds": 300,
            "Type": "Wait"
        },
        "Wait for Training": {
            "Next": "Get Training Status",
            "Seconds": 300,
            "Type": "Wait"
        }
    }
}
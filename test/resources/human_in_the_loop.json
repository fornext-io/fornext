{
    "Comment": "A state machine to integrate a human approver",
    "StartAt": "Notify Approver",
    "States": {
        "Approved?": {
            "Choices": [
                {
                    "And": [
                        {
                            "IsPresent": true,
                            "Variable": "$.approvalStatus"
                        },
                        {
                            "IsPresent": true,
                            "Variable": "$.approvalStatus.result"
                        },
                        {
                            "BooleanEquals": true,
                            "Variable": "$.approvalStatus.result"
                        }
                    ],
                    "Next": "Handle approval"
                },
                {
                    "And": [
                        {
                            "IsPresent": true,
                            "Variable": "$.approvalStatus"
                        },
                        {
                            "IsPresent": true,
                            "Variable": "$.approvalStatus.result"
                        }
                    ],
                    "Next": "Handle rejection"
                }
            ],
            "Default": "Handle failure",
            "Type": "Choice"
        },
        "Handle approval": {
            "End": true,
            "OutputPath": "$.Payload",
            "Parameters": {
                "FunctionName": "${ProcessingLambda}",
                "Payload.$": "$"
            },
            "Resource": "arn:aws:states:::lambda:invoke",
            "Retry": [
                {
                    "BackoffRate": 2,
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 6
                }
            ],
            "Type": "Task"
        },
        "Handle failure": {
            "End": true,
            "OutputPath": "$.Payload",
            "Parameters": {
                "FunctionName": "${ProcessingLambda}",
                "Payload.$": "$"
            },
            "Resource": "arn:aws:states:::lambda:invoke",
            "Retry": [
                {
                    "BackoffRate": 2,
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 6
                }
            ],
            "Type": "Task"
        },
        "Handle rejection": {
            "End": true,
            "OutputPath": "$.Payload",
            "Parameters": {
                "FunctionName": "${ProcessingLambda}",
                "Payload.$": "$"
            },
            "Resource": "arn:aws:states:::lambda:invoke",
            "Retry": [
                {
                    "BackoffRate": 2,
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 6
                }
            ],
            "Type": "Task"
        },
        "Notify Approver": {
            "Next": "Approved?",
            "Parameters": {
                "Message": {
                    "message.$": "$",
                    "token.$": "$$.Task.Token"
                },
                "TopicArn": "${TopicName}"
            },
            "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
            "ResultPath": "$.approvalStatus",
            "Type": "Task"
        }
    }
}